//CREACIÓN DE LA BASE DE DATOS
CREATE DATABASE "ParkinDB"
    WITH 
    OWNER = "UserParkingDB"
    ENCODING = 'UTF8'
    CONNECTION LIMIT = -1;

COMMENT ON DATABASE "ParkinDB"
    IS 'Esta base de datos pertenece al aplicativo Parking en Java Swing';

//CREACIÓN DE TABLAS

create table rateday (
id SERIAL primary key,
priceday decimal (4,2)
);

create table rateour (
id SERIAL primary key,
pricehour decimal (4,2)
);

create table typecar (
id SERIAL primary key,
typcar varchar (50)
);

create table ratecar (
id SERIAL primary key,
fktypecar int,
fkratehour int,
fkrateday int,
FOREIGN KEY (fkratehour) REFERENCES ratehour (id),
FOREIGN KEY (fkrateday) REFERENCES rateday (id)
);

create table marcacar (
id SERIAL primary key,
marcacar varchar (50)
);

create table statecar (
id SERIAL primary key,
statecar varchar (50)
);

create table Car (
id SERIAL primary key,
numbercar varchar (6),
color varchar (30),
fkmarcacar integer,
fktypecar  integer,
fkstatecar  integer,
FOREIGN KEY (fkmarcacar) REFERENCES marcacar (id),
FOREIGN KEY (fktypecar) REFERENCES typecar (id),
FOREIGN KEY (fkstatecar) REFERENCES statecar (id)
);

create table sex (
id SERIAL primary key,
sex varchar (20) 
);

create table client (
id SERIAL primary key,
firstname varchar (100), 
lasttname varchar (100),
identification varchar (8),
phone integer,
address varchar(200),
fksexo integer,
fkcar integer,
FOREIGN KEY (fksexo) REFERENCES sex (id),
FOREIGN KEY (fkcar) REFERENCES Car (id)
);
create table typeaccount (
id SERIAL primary key,
typeaccount varchar (20) 
);
create table account (
id SERIAL primary key,
userid varchar (10),
pass varchar(10),
fktypeaccount integer,
FOREIGN KEY (fktypeaccount) REFERENCES typeaccount (id)
);
create table typeaccount (
id SERIAL primary key,
typeaccount varchar (20) 
);
create table states (
id SERIAL primary key,
states varchar (30),
spaces integer
);
create table parking (
id SERIAL primary key,
datetimestart timestamp,
datetimeend timestamp,
fkclient integer,
fkaccount integer,
fkstates integer,
FOREIGN KEY (fkclient) REFERENCES client (id),
FOREIGN KEY (fkaccount) REFERENCES account (id),
FOREIGN KEY (fkstates) REFERENCES states (id)
);
create table typepay (
id SERIAL primary key,
typepay varchar (30)
);
create table pay (
id SERIAL primary key,
mount decimal (4,2),
datetimepay timestamp,
fkparking integer,
fktypepay integer,
FOREIGN KEY (fkparking) REFERENCES parking (id),
FOREIGN KEY (fktypepay) REFERENCES typepay (id)
);

//VIEWS DE LA BASE DE DATOS

//Muestra todas las tarifas por día
create view totaltarifadia as
select * from rateday;

//Muestra todas las tarifas por hora
create view totaltarifahora as
select * from ratehour;
//Muestra el total de tipo de pago e ingresa 3 registros
insert into typepay (typepay) values ('Efectivo');
insert into typepay (typepay) values ('Tarjeta');
insert into typepay (typepay) values ('Qr');

create view totaltipopago as
select * from typepay;

//Muestra el total de marcas de auto e ingresa 3 registros
insert into marcacar (marcacar) values ('Toyota');
insert into marcacar (marcacar) values ('Subaru');
insert into marcacar (marcacar) values ('Nissan');
create view totalmarcaauto as
select * from marcacar;

//Muestra el total de estados de auto e ingresa 3 registros
insert into statecar (statecar) values ('Excelente');
insert into statecar (statecar) values ('Malogrado');
insert into statecar (statecar) values ('Observado');
create view totalestadoauto as
select * from statecar;

//Se incorporaron los 2 tipos de usuarios
insert into typeaccount(typeaccount) values ('Administrador');
insert into typeaccount(typeaccount) values ('Empleado');


//Se incorporaron los 2 tipos de sexo
insert into sex(sex) values ('Masculino');
insert into sex(sex) values ('Femenino');


//Vista para mostrar solo los precios por hora en el combobox
create view combopreciohora as
select ratehour.pricehour from ratehour;
select * from combopreciohora;

//Se insertó 3 registros de los tipos de autos
insert into typecar (typcar) values ('Auto');
insert into typecar (typcar) values ('Camioneta');
insert into typecar (typcar) values ('Bus');


//Vistas de total de tipos de auto y combo de tipos de auto
create view totaltipoauto as
select * from typecar;
create view combotipoauto as
select typecar.typcar from typecar;

//Vista de combotipo de usuario
create view combotipousuario as
select typeaccount.typeaccount from typeaccount;

//Vista de combosexo
create view combosexo as
select sex.sex from sex;

//Vista de combo tipo de auto
create view combotipoauto as
select typecar.typcar from typecar;

//Vista de commboestado de auto
create view comboestadoauto as
select statecar.statecar from statecar;